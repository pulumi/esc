name: Publish Release

on:
  push:
    tags:
      - v*.*.*
      - '!v*.*.*-**'

env:
  ESC_ACTION_OIDC_AUTH: true
  ESC_ACTION_OIDC_ORGANIZATION: pulumi
  ESC_ACTION_OIDC_REQUESTED_TOKEN_TYPE: urn:pulumi:token-type:access_token:organization
  ESC_ACTION_ENVIRONMENT: imports/github-secrets
  ESC_ACTION_EXPORT_ENVIRONMENT_VARIABLES: GITHUB_TOKEN=PULUMI_BOT_TOKEN

permissions:
  contents: write # Needed to publish releases
  packages: write # Needed for publishing packages
  id-token: write
  actions: read
  attestations: read
  checks: read
  deployments: read
  discussions: read
  issues: read
  pages: read
  pull-requests: read
  repository-projects: read
  statuses: read
  security-events: read

jobs:
  lint:
    uses: ./.github/workflows/stage-lint.yml

  test:
    uses: ./.github/workflows/stage-test.yml
    with:
      enable-coverage: true
    secrets: inherit

  publish:
    needs: [test, lint]
    uses: ./.github/workflows/stage-publish.yml
    with:
      goreleaser-args: -p 10 -f .goreleaser.yml --rm-dist --skip-validate --timeout 60m0s --release-notes=CHANGELOG_PENDING.md
    secrets: inherit

  s3-blobs:
    needs: [publish]
    name: s3 blobs
    runs-on: ubuntu-latest
    steps:
      - name: Fetch secrets from ESC
        id: esc-secrets
        uses: pulumi/esc-action@v1
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-region: us-east-2
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          role-duration-seconds: 3600
          role-external-id: upload-pulumi-release
          role-session-name: pulumi@githubActions
          role-to-assume: ${{ steps.esc-secrets.outputs.AWS_UPLOAD_ROLE_ARN }}
      - name: Download release artifacts
        run: |
          mkdir -p artifacts
          gh release download "${{ github.ref_name }}" --dir ./artifacts --pattern 'esc-*'
          find artifacts
      - name: Publish Blobs
        run: |
          aws s3 sync artifacts s3://get.pulumi.com/esc/releases --acl public-read

  dispatch:
    name: ${{ matrix.job.name }}
    if: "!contains(${{ github.ref_name }}, '-')"
    runs-on: ubuntu-latest
    needs: [publish]
    strategy:
      fail-fast: false
      matrix:
        job:
          - name: Dispatch docs workflow
            run-command: pulumictl create cli-docs-build "${{ github.ref_name }}" --event-type "esc-cli"
    steps:
      - name: Fetch secrets from ESC
        id: esc-secrets
        uses: pulumi/esc-action@v1
      - name: Checkout Repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}
      - name: Install Pulumictl
        uses: jaxxstorm/action-install-gh-release@v2.0.0
        env:
          GITHUB_TOKEN: ${{ steps.esc-secrets.outputs.PULUMI_BOT_TOKEN }}
        with:
          repo: pulumi/pulumictl
          tag: v0.0.45
          cache: enable
      - name: Repository Dispatch
        run: ${{ matrix.job.run-command }}
