// Copyright 2024, Pulumi Corporation.  All rights reserved.
/*
ESC (Environments, Secrets, Config) API

Pulumi ESC allows you to compose and manage hierarchical collections of configuration and secrets and consume them in various ways.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esc_sdk

import (
	"encoding/json"
)

// checks if the EnvironmentDefinitionValues type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvironmentDefinitionValues{}

// EnvironmentDefinitionValues struct for EnvironmentDefinitionValues
type EnvironmentDefinitionValues struct {
	PulumiConfig map[string]interface{} `json:"pulumiConfig,omitempty"`
	EnvironmentVariables *map[string]string `json:"environmentVariables,omitempty"`
	Files *map[string]string `json:"files,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _EnvironmentDefinitionValues EnvironmentDefinitionValues

// NewEnvironmentDefinitionValues instantiates a new EnvironmentDefinitionValues object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentDefinitionValues() *EnvironmentDefinitionValues {
	this := EnvironmentDefinitionValues{}
	return &this
}

// NewEnvironmentDefinitionValuesWithDefaults instantiates a new EnvironmentDefinitionValues object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentDefinitionValuesWithDefaults() *EnvironmentDefinitionValues {
	this := EnvironmentDefinitionValues{}
	return &this
}

// GetPulumiConfig returns the PulumiConfig field value if set, zero value otherwise.
func (o *EnvironmentDefinitionValues) GetPulumiConfig() map[string]interface{} {
	if o == nil || IsNil(o.PulumiConfig) {
		var ret map[string]interface{}
		return ret
	}
	return o.PulumiConfig
}

// GetPulumiConfigOk returns a tuple with the PulumiConfig field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentDefinitionValues) GetPulumiConfigOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.PulumiConfig) {
		return map[string]interface{}{}, false
	}
	return o.PulumiConfig, true
}

// HasPulumiConfig returns a boolean if a field has been set.
func (o *EnvironmentDefinitionValues) HasPulumiConfig() bool {
	if o != nil && !IsNil(o.PulumiConfig) {
		return true
	}

	return false
}

// SetPulumiConfig gets a reference to the given map[string]interface{} and assigns it to the PulumiConfig field.
func (o *EnvironmentDefinitionValues) SetPulumiConfig(v map[string]interface{}) {
	o.PulumiConfig = v
}

// GetEnvironmentVariables returns the EnvironmentVariables field value if set, zero value otherwise.
func (o *EnvironmentDefinitionValues) GetEnvironmentVariables() map[string]string {
	if o == nil || IsNil(o.EnvironmentVariables) {
		var ret map[string]string
		return ret
	}
	return *o.EnvironmentVariables
}

// GetEnvironmentVariablesOk returns a tuple with the EnvironmentVariables field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentDefinitionValues) GetEnvironmentVariablesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.EnvironmentVariables) {
		return nil, false
	}
	return o.EnvironmentVariables, true
}

// HasEnvironmentVariables returns a boolean if a field has been set.
func (o *EnvironmentDefinitionValues) HasEnvironmentVariables() bool {
	if o != nil && !IsNil(o.EnvironmentVariables) {
		return true
	}

	return false
}

// SetEnvironmentVariables gets a reference to the given map[string]string and assigns it to the EnvironmentVariables field.
func (o *EnvironmentDefinitionValues) SetEnvironmentVariables(v map[string]string) {
	o.EnvironmentVariables = &v
}

// GetFiles returns the Files field value if set, zero value otherwise.
func (o *EnvironmentDefinitionValues) GetFiles() map[string]string {
	if o == nil || IsNil(o.Files) {
		var ret map[string]string
		return ret
	}
	return *o.Files
}

// GetFilesOk returns a tuple with the Files field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentDefinitionValues) GetFilesOk() (*map[string]string, bool) {
	if o == nil || IsNil(o.Files) {
		return nil, false
	}
	return o.Files, true
}

// HasFiles returns a boolean if a field has been set.
func (o *EnvironmentDefinitionValues) HasFiles() bool {
	if o != nil && !IsNil(o.Files) {
		return true
	}

	return false
}

// SetFiles gets a reference to the given map[string]string and assigns it to the Files field.
func (o *EnvironmentDefinitionValues) SetFiles(v map[string]string) {
	o.Files = &v
}

func (o EnvironmentDefinitionValues) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvironmentDefinitionValues) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.PulumiConfig) {
		toSerialize["pulumiConfig"] = o.PulumiConfig
	}
	if !IsNil(o.EnvironmentVariables) {
		toSerialize["environmentVariables"] = o.EnvironmentVariables
	}
	if !IsNil(o.Files) {
		toSerialize["files"] = o.Files
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *EnvironmentDefinitionValues) UnmarshalJSON(data []byte) (err error) {
	varEnvironmentDefinitionValues := _EnvironmentDefinitionValues{}

	err = json.Unmarshal(data, &varEnvironmentDefinitionValues)

	if err != nil {
		return err
	}

	*o = EnvironmentDefinitionValues(varEnvironmentDefinitionValues)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "pulumiConfig")
		delete(additionalProperties, "environmentVariables")
		delete(additionalProperties, "files")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableEnvironmentDefinitionValues struct {
	value *EnvironmentDefinitionValues
	isSet bool
}

func (v NullableEnvironmentDefinitionValues) Get() *EnvironmentDefinitionValues {
	return v.value
}

func (v *NullableEnvironmentDefinitionValues) Set(val *EnvironmentDefinitionValues) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentDefinitionValues) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentDefinitionValues) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentDefinitionValues(val *EnvironmentDefinitionValues) *NullableEnvironmentDefinitionValues {
	return &NullableEnvironmentDefinitionValues{value: val, isSet: true}
}

func (v NullableEnvironmentDefinitionValues) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentDefinitionValues) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


