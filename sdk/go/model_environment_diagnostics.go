// Copyright 2024, Pulumi Corporation.  All rights reserved.
/*
ESC (Environments, Secrets, Config) API

Pulumi ESC allows you to compose and manage hierarchical collections of configuration and secrets and consume them in various ways.

API version: 0.1.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esc_sdk

import (
	"encoding/json"
)

// checks if the EnvironmentDiagnostics type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EnvironmentDiagnostics{}

// EnvironmentDiagnostics struct for EnvironmentDiagnostics
type EnvironmentDiagnostics struct {
	Diagnostics []EnvironmentDiagnostic `json:"diagnostics,omitempty"`
}

// NewEnvironmentDiagnostics instantiates a new EnvironmentDiagnostics object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEnvironmentDiagnostics() *EnvironmentDiagnostics {
	this := EnvironmentDiagnostics{}
	return &this
}

// NewEnvironmentDiagnosticsWithDefaults instantiates a new EnvironmentDiagnostics object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEnvironmentDiagnosticsWithDefaults() *EnvironmentDiagnostics {
	this := EnvironmentDiagnostics{}
	return &this
}

// GetDiagnostics returns the Diagnostics field value if set, zero value otherwise.
func (o *EnvironmentDiagnostics) GetDiagnostics() []EnvironmentDiagnostic {
	if o == nil || IsNil(o.Diagnostics) {
		var ret []EnvironmentDiagnostic
		return ret
	}
	return o.Diagnostics
}

// GetDiagnosticsOk returns a tuple with the Diagnostics field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EnvironmentDiagnostics) GetDiagnosticsOk() ([]EnvironmentDiagnostic, bool) {
	if o == nil || IsNil(o.Diagnostics) {
		return nil, false
	}
	return o.Diagnostics, true
}

// HasDiagnostics returns a boolean if a field has been set.
func (o *EnvironmentDiagnostics) HasDiagnostics() bool {
	if o != nil && !IsNil(o.Diagnostics) {
		return true
	}

	return false
}

// SetDiagnostics gets a reference to the given []EnvironmentDiagnostic and assigns it to the Diagnostics field.
func (o *EnvironmentDiagnostics) SetDiagnostics(v []EnvironmentDiagnostic) {
	o.Diagnostics = v
}

func (o EnvironmentDiagnostics) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EnvironmentDiagnostics) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Diagnostics) {
		toSerialize["diagnostics"] = o.Diagnostics
	}
	return toSerialize, nil
}

type NullableEnvironmentDiagnostics struct {
	value *EnvironmentDiagnostics
	isSet bool
}

func (v NullableEnvironmentDiagnostics) Get() *EnvironmentDiagnostics {
	return v.value
}

func (v *NullableEnvironmentDiagnostics) Set(val *EnvironmentDiagnostics) {
	v.value = val
	v.isSet = true
}

func (v NullableEnvironmentDiagnostics) IsSet() bool {
	return v.isSet
}

func (v *NullableEnvironmentDiagnostics) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEnvironmentDiagnostics(val *EnvironmentDiagnostics) *NullableEnvironmentDiagnostics {
	return &NullableEnvironmentDiagnostics{value: val, isSet: true}
}

func (v NullableEnvironmentDiagnostics) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEnvironmentDiagnostics) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


