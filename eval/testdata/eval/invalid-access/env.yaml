imports:
  - a
  - a
values:
  string: esc
  array: [1, 2, 3]
  object:
    hello: world
  myObject:
    foo: bar
  open:
    fn::open::schema:
      "null": null
      boolean: true
      "false": false
      "true": true
      number: 42
      pi: 3.14
      string: esc
      hello: hello
      array: [ 2, items, { some: object }, [ array ] ]
      tuple: [ hello, world ]
      map: { hello: world, blue: 42 }
      record: { foo: bar }
      anyOf: hello
      oneOf: 42
      ref: { baz: qux }
  errors:
    - ${string.foo}
    - ${array.foo}
    - ${array["foo"]}
    - ${array[3]}
    - ${array[-1]}
    - ${object[1]}
    - ${object.bar}
    - ${myObject.bar}
    - ${otherObject[0]}
    - ${open.string.foo}
    - ${open.array.foo}
    - ${open.array["foo"]}
    - ${open.record[1]}

