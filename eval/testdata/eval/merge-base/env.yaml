# This test validates that merge behavior works properly for property access expressions.
#
# In the environment below, the value of some_object should the value from this env merged with
# the value from a, and the value of other_object should be the value of some_object merged with
# other_object from a. Merging other_object should not affect the value of some_object.
#
# In concrete terms, we expect the environment to evaluate to:
#
# {
#   "other_object": {
#     "alpha": "beta",
#     "baz": "zab",
#     "foo": "baz",
#     "nested": {
#       "epsilon": "delta",
#       "zed": "dez"
#     }
#   },
#   "some_object": {
#     "alpha": "beta",
#     "baz": "zab",
#     "foo": "baz",
#     "nested": {
#       "zed": "dez"
#     }
#   }
# } 
#
# A buggy merge implementation might evaluate the environment such that the value of some_object is
# identical to that of other_object.

imports:
  - a
values:
  some_object:
    foo: baz
    alpha: beta
    nested:
      zed: dez
  other_object: ${some_object}
