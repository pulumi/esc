run: |
  esc env init default/test
  esc env set default/test foo.bar.baz qux && esc env get default/test
  esc env set default/test foo.bar.alpha zed && esc env get default/test
  esc env set default/test 'foo.beta[0]' gamma && esc env get default/test
  esc env set default/test 'foo.beta[1]' 42 && esc env get default/test
  esc env set default/test open '{"fn::open::test": "esc"}' && esc env get default/test
  esc env set default/test 'open["fn::open::test"]' cse && esc env get default/test
  esc env set default/test array '[hello, world]' && esc env get default/test
  esc env set default/test 'array[1]' esc && esc env get default/test
  esc env set default/test 'array[2]' '{}' && esc env get default/test
  esc env set default/test 'array[2].foo' bar && esc env get default/test
  esc env set default/test 'array[2].foo' '' && esc env get default/test
  esc env init default/test2
  esc env set default/test 'imports[0]' default/test2 && esc env get default/test
  esc env init default/test3
  esc env set default/test 'imports[1]' default/test3 && esc env get default/test
  esc env set default/test binary '{"fn::fromBase64": "SJ5zicDxjGWXv1Y53mDw/A=="}' && esc env get default/test && esc env get --value=detailed default/test binary

---
> esc env init default/test
Environment created: test-user/default/test
> esc env set default/test foo.bar.baz qux
> esc env get default/test
# Value
```json
{
  "foo": {
    "bar": {
      "baz": "qux"
    }
  }
}
```
# Definition
```yaml
values:
  foo:
    bar:
      baz: qux

```

> esc env set default/test foo.bar.alpha zed
> esc env get default/test
# Value
```json
{
  "foo": {
    "bar": {
      "alpha": "zed",
      "baz": "qux"
    }
  }
}
```
# Definition
```yaml
values:
  foo:
    bar:
      baz: qux
      alpha: zed

```

> esc env set default/test foo.beta[0] gamma
> esc env get default/test
# Value
```json
{
  "foo": {
    "bar": {
      "alpha": "zed",
      "baz": "qux"
    },
    "beta": [
      "gamma"
    ]
  }
}
```
# Definition
```yaml
values:
  foo:
    bar:
      baz: qux
      alpha: zed
    beta:
      - gamma

```

> esc env set default/test foo.beta[1] 42
> esc env get default/test
# Value
```json
{
  "foo": {
    "bar": {
      "alpha": "zed",
      "baz": "qux"
    },
    "beta": [
      "gamma",
      42
    ]
  }
}
```
# Definition
```yaml
values:
  foo:
    bar:
      baz: qux
      alpha: zed
    beta:
      - gamma
      - 42

```

> esc env set default/test open {"fn::open::test": "esc"}
> esc env get default/test
# Value
```json
{
  "foo": {
    "bar": {
      "alpha": "zed",
      "baz": "qux"
    },
    "beta": [
      "gamma",
      42
    ]
  },
  "open": "[unknown]"
}
```
# Definition
```yaml
values:
  foo:
    bar:
      baz: qux
      alpha: zed
    beta:
      - gamma
      - 42
  open:
    "fn::open::test": "esc"

```

> esc env set default/test open["fn::open::test"] cse
> esc env get default/test
# Value
```json
{
  "foo": {
    "bar": {
      "alpha": "zed",
      "baz": "qux"
    },
    "beta": [
      "gamma",
      42
    ]
  },
  "open": "[unknown]"
}
```
# Definition
```yaml
values:
  foo:
    bar:
      baz: qux
      alpha: zed
    beta:
      - gamma
      - 42
  open:
    "fn::open::test": "cse"

```

> esc env set default/test array [hello, world]
> esc env get default/test
# Value
```json
{
  "array": [
    "hello",
    "world"
  ],
  "foo": {
    "bar": {
      "alpha": "zed",
      "baz": "qux"
    },
    "beta": [
      "gamma",
      42
    ]
  },
  "open": "[unknown]"
}
```
# Definition
```yaml
values:
  foo:
    bar:
      baz: qux
      alpha: zed
    beta:
      - gamma
      - 42
  open:
    "fn::open::test": "cse"
  array:
    - hello
    - world

```

> esc env set default/test array[1] esc
> esc env get default/test
# Value
```json
{
  "array": [
    "hello",
    "esc"
  ],
  "foo": {
    "bar": {
      "alpha": "zed",
      "baz": "qux"
    },
    "beta": [
      "gamma",
      42
    ]
  },
  "open": "[unknown]"
}
```
# Definition
```yaml
values:
  foo:
    bar:
      baz: qux
      alpha: zed
    beta:
      - gamma
      - 42
  open:
    "fn::open::test": "cse"
  array:
    - hello
    - esc

```

> esc env set default/test array[2] {}
> esc env get default/test
# Value
```json
{
  "array": [
    "hello",
    "esc",
    {}
  ],
  "foo": {
    "bar": {
      "alpha": "zed",
      "baz": "qux"
    },
    "beta": [
      "gamma",
      42
    ]
  },
  "open": "[unknown]"
}
```
# Definition
```yaml
values:
  foo:
    bar:
      baz: qux
      alpha: zed
    beta:
      - gamma
      - 42
  open:
    "fn::open::test": "cse"
  array:
    - hello
    - esc
    - {}

```

> esc env set default/test array[2].foo bar
> esc env get default/test
# Value
```json
{
  "array": [
    "hello",
    "esc",
    {
      "foo": "bar"
    }
  ],
  "foo": {
    "bar": {
      "alpha": "zed",
      "baz": "qux"
    },
    "beta": [
      "gamma",
      42
    ]
  },
  "open": "[unknown]"
}
```
# Definition
```yaml
values:
  foo:
    bar:
      baz: qux
      alpha: zed
    beta:
      - gamma
      - 42
  open:
    "fn::open::test": "cse"
  array:
    - hello
    - esc
    - {foo: bar}

```

> esc env set default/test array[2].foo 
> esc env get default/test
# Value
```json
{
  "array": [
    "hello",
    "esc",
    {
      "foo": ""
    }
  ],
  "foo": {
    "bar": {
      "alpha": "zed",
      "baz": "qux"
    },
    "beta": [
      "gamma",
      42
    ]
  },
  "open": "[unknown]"
}
```
# Definition
```yaml
values:
  foo:
    bar:
      baz: qux
      alpha: zed
    beta:
      - gamma
      - 42
  open:
    "fn::open::test": "cse"
  array:
    - hello
    - esc
    - {foo: ""}

```

> esc env init default/test2
Environment created: test-user/default/test2
> esc env set default/test imports[0] default/test2
> esc env get default/test
# Value
```json
{
  "array": [
    "hello",
    "esc",
    {
      "foo": ""
    }
  ],
  "foo": {
    "bar": {
      "alpha": "zed",
      "baz": "qux"
    },
    "beta": [
      "gamma",
      42
    ]
  },
  "open": "[unknown]"
}
```
# Definition
```yaml
values:
  foo:
    bar:
      baz: qux
      alpha: zed
    beta:
      - gamma
      - 42
  open:
    "fn::open::test": "cse"
  array:
    - hello
    - esc
    - {foo: ""}
imports:
  - default/test2

```

> esc env init default/test3
Environment created: test-user/default/test3
> esc env set default/test imports[1] default/test3
> esc env get default/test
# Value
```json
{
  "array": [
    "hello",
    "esc",
    {
      "foo": ""
    }
  ],
  "foo": {
    "bar": {
      "alpha": "zed",
      "baz": "qux"
    },
    "beta": [
      "gamma",
      42
    ]
  },
  "open": "[unknown]"
}
```
# Definition
```yaml
values:
  foo:
    bar:
      baz: qux
      alpha: zed
    beta:
      - gamma
      - 42
  open:
    "fn::open::test": "cse"
  array:
    - hello
    - esc
    - {foo: ""}
imports:
  - default/test2
  - default/test3

```

> esc env set default/test binary {"fn::fromBase64": "SJ5zicDxjGWXv1Y53mDw/A=="}
> esc env get default/test
# Value
```json
{
  "array": [
    "hello",
    "esc",
    {
      "foo": ""
    }
  ],
  "binary": "SJ5zicDxjGWXv1Y53mDw/A==",
  "foo": {
    "bar": {
      "alpha": "zed",
      "baz": "qux"
    },
    "beta": [
      "gamma",
      42
    ]
  },
  "open": "[unknown]"
}
```
# Definition
```yaml
values:
  foo:
    bar:
      baz: qux
      alpha: zed
    beta:
      - gamma
      - 42
  open:
    "fn::open::test": "cse"
  array:
    - hello
    - esc
    - {foo: ""}
  binary:
    "fn::fromBase64": "SJ5zicDxjGWXv1Y53mDw/A=="
imports:
  - default/test2
  - default/test3

```

> esc env get --value=detailed default/test binary
{
  "value": "SJ5zicDxjGWXv1Y53mDw/A==",
  "binary": true,
  "trace": {
    "def": {
      "environment": "\u003cyaml\u003e",
      "begin": {
        "line": 16,
        "column": 5,
        "byte": 188
      },
      "end": {
        "line": 16,
        "column": 47,
        "byte": 230
      }
    }
  }
}

---
> esc env init default/test
> esc env set default/test foo.bar.baz qux
> esc env get default/test
> esc env set default/test foo.bar.alpha zed
> esc env get default/test
> esc env set default/test foo.beta[0] gamma
> esc env get default/test
> esc env set default/test foo.beta[1] 42
> esc env get default/test
> esc env set default/test open {"fn::open::test": "esc"}
> esc env get default/test
> esc env set default/test open["fn::open::test"] cse
> esc env get default/test
> esc env set default/test array [hello, world]
> esc env get default/test
> esc env set default/test array[1] esc
> esc env get default/test
> esc env set default/test array[2] {}
> esc env get default/test
> esc env set default/test array[2].foo bar
> esc env get default/test
> esc env set default/test array[2].foo 
> esc env get default/test
> esc env init default/test2
> esc env set default/test imports[0] default/test2
> esc env get default/test
> esc env init default/test3
> esc env set default/test imports[1] default/test3
> esc env get default/test
> esc env set default/test binary {"fn::fromBase64": "SJ5zicDxjGWXv1Y53mDw/A=="}
> esc env get default/test
> esc env get --value=detailed default/test binary
