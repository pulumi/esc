run: |
  esc env get test --value json null
  esc env get test --value json boolean
  esc env get test --value json number
  esc env get test --value json string
  esc env get test --value json array
  esc env get test --value json 'array[0]'
  esc env get test --value json 'array[1]'
  esc env get test --value json object
  esc env get test --value json object.hello
  esc env get test --value json object.goodbye
  esc env get test --value json open
environments:
  test-user/default/a:
    values:
      object: {hello: esc, goodbye: world}
  test-user/default/b:
    values:
      string: foo
      object: {goodbye: all}
  test-user/default/test:
    imports:
      - a
      - b
    values:
      # comment
      "null": null
      boolean: true
      number: 42
      string: esc
      array: [hello, world]
      object: {hello: world}
      open:
        fn::open::test: echo
stdout: |
  > esc env get test --value json null
  null
  > esc env get test --value json boolean
  true
  > esc env get test --value json number
  42
  > esc env get test --value json string
  "esc"
  > esc env get test --value json array
  [
    "hello",
    "world"
  ]
  > esc env get test --value json array[0]
  "hello"
  > esc env get test --value json array[1]
  "world"
  > esc env get test --value json object
  {
    "goodbye": "all",
    "hello": "world"
  }
  > esc env get test --value json object.hello
  "world"
  > esc env get test --value json object.goodbye
  "all"
  > esc env get test --value json open
  "[unknown]"
stderr: |
  > esc env get test --value json null
  > esc env get test --value json boolean
  > esc env get test --value json number
  > esc env get test --value json string
  > esc env get test --value json array
  > esc env get test --value json array[0]
  > esc env get test --value json array[1]
  > esc env get test --value json object
  > esc env get test --value json object.hello
  > esc env get test --value json object.goodbye
  > esc env get test --value json open
